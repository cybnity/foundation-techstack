<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cybnity</groupId>
	<artifactId>techstack-ref</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>
	<name>CYBNITY technologies stack prototypes line</name>
	<properties>
		<maven.min-version>3.8.5</maven.min-version>
		<java.version>11</java.version>
		<!-- Align Maven default configuration about JDK version to use -->
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.release>${java.version}</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Activate warning about java deprecations (deprecation) or without (unchecked) -->
		<lint.activation>deprecation</lint.activation>
		<junit.version>[4.13.1,)</junit.version>
		<javafx.version>13</javafx.version>

		<!-- CYBNITY project revision -->
		<revision>1.0.0-SNAPSHOT</revision>
	</properties>

	<modules>
		<!-- MANAGED ONLY PROTOTYPES LINE'S MODULES -->
		<!-- Technology stack implementation sub-project (e.g framework, customized open source dependency...) -->
		<module>prototypes-line</module>
	</modules>

	<organization>
		<name>CYBNITY</name>
		<url>http://www.cybnity.org</url>
	</organization>

	<!-- Generalized dependency versions -->
	<dependencyManagement>
		<dependencies></dependencies>
	</dependencyManagement>

	<!-- Common and projects transversal dependencies -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!--
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>-->
	</dependencies>

	<!-- Lits of advise about project -->
	<mailingLists>
		<mailingList>
			<name>${project.name} developers list</name>
		</mailingList>
		<mailingList>
			<name>${project.name} testers list</name>
		</mailingList>
		<mailingList>
			<name>${project.name} users list</name>
		</mailingList>
	</mailingLists>

	<!-- Contributors -->
	<developers>
		<developer>
			<id>o.lemee</id>
			<name>Olivier Lemee</name>
			<email>olivier@agnet.fr</email>
			<organization>AG Net</organization>
			<organizationUrl>http://corp.agnet.fr</organizationUrl>
			<timezone>FR</timezone>
			<roles>
				<role>Product Owner</role>
				<role>Software Architect</role>
				<role>Release Manager</role>
			</roles>
		</developer>
	</developers>

	<!-- Build chain configuration -->
	<build>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.10.1</version>
					<configuration>
						<showDeprecation>false</showDeprecation>
						<showWarnings>true</showWarnings>
						<!-- Use release node alone in place of source & target nodes when equals value (8, 9, 11, 12) -->

						<source>${java.version}</source>
						<target>${java.version}</target>
						<compilerVersion>${java.version}</compilerVersion>
						<release>${maven.compiler.target}</release>
						<encoding>${project.build.sourceEncoding}</encoding>
						<compilerArgument>-Xlint:${lint.activation}</compilerArgument>
					</configuration>
				</plugin>
				<!-- Tests execution management -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M6</version>
					<configuration>
						<includes>
							<include>**/*UseCaseTest.java</include>
							<include>**/*Test.java</include>
						</includes>
						<skip>false</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>jar</nonFilteredFileExtension>
							<nonFilteredFileExtension>gif</nonFilteredFileExtension>
							<nonFilteredFileExtension>jpeg</nonFilteredFileExtension>
							<nonFilteredFileExtension>jpg</nonFilteredFileExtension>
							<nonFilteredFileExtension>png</nonFilteredFileExtension>
							<nonFilteredFileExtension>xls</nonFilteredFileExtension>
							<nonFilteredFileExtension>otf</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-changes-plugin</artifactId>
					<version>2.12.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<outputDirectory>target/site</outputDirectory>
	</reporting>

</project>
